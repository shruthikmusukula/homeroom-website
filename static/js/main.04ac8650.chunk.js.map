{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","class","title","scroll","href","name","col","style","width","margin","color","height","background","className","shadow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,kC,2HC8S5BC,MApRf,WACE,OACE,kBAAC,SAAD,KACE,kBAAC,UAAD,KACE,kBAAC,SAAD,CAAQC,MAAM,eAAeC,MAAM,WAAWC,QAAM,GAClD,kBAAC,aAAD,KACE,uBAAGC,KAAK,UAAR,SACA,uBAAGA,KAAK,SAAR,SACA,uBAAGA,KAAK,eAAR,eACA,uBAAGA,KAAK,aAAR,kBACA,uBAAGA,KAAK,aAAR,qBACA,uBAAGA,KAAK,sEAAR,gBACA,uBAAGA,KAAK,sDAAR,qBAIJ,uBAAGC,KAAK,SACN,kBAAC,OAAD,CAAMF,QAAM,GACV,kBAAC,OAAD,CAAMG,IAAK,IACT,kBAAC,OAAD,CACEH,QAAM,EACNI,MAAO,CACLC,MAAO,OACPC,OAAQ,SAGV,kBAAC,YAAD,CACEF,MAAO,CACLG,MAAO,OACPC,OAAQ,QACRC,WACE,gJALN,YAUA,kBAAC,WAAD,KACE,2JAIE,8CAJF,igBAoBV,uBAAGP,KAAK,QACN,kBAAC,OAAD,CAAMQ,UAAU,cAAcV,QAAM,GAClC,kBAAC,OAAD,CAAMG,IAAK,IACT,kBAAC,OAAD,CACEH,QAAM,EACNI,MAAO,CACLC,MAAO,OACPC,OAAQ,SAGV,kBAAC,YAAD,CACEF,MAAO,CACLG,MAAO,OACPC,OAAQ,QACRC,WACE,+IALN,kCAUF,kBAAC,WAAD,KACE,6SAQJ,kBAAC,OAAD,CAAMN,IAAK,GACT,kBAAC,OAAD,CACEQ,OAAQ,EACRP,MAAO,CACLI,OAAQ,QACRH,MAAO,QACPI,WACE,+GACFH,OAAQ,WAId,kBAAC,OAAD,CAAMH,IAAK,GACT,kBAAC,OAAD,CACEQ,OAAQ,EACRP,MAAO,CACLI,OAAQ,QACRH,MAAO,QACPI,WACE,+GACFH,OAAQ,aAOlB,uBAAGJ,KAAK,cACN,kBAAC,OAAD,CAAMQ,UAAU,cAAcV,QAAM,GAClC,kBAAC,OAAD,CAAMG,IAAK,IACT,kBAAC,OAAD,CACEH,QAAM,EACNI,MAAO,CACLC,MAAO,OACPC,OAAQ,SAGV,kBAAC,YAAD,CACEF,MAAO,CACLG,MAAO,OACPC,OAAQ,QACRC,WACE,+IALN,iCAUF,kBAAC,WAAD,KACE,uWAQJ,kBAAC,OAAD,CAAMN,IAAK,GACT,kBAAC,OAAD,CACEQ,OAAQ,EACRP,MAAO,CACLI,OAAQ,QACRH,MAAO,QACPI,WACE,+GACFH,OAAQ,WAId,kBAAC,OAAD,CAAMH,IAAK,GACT,kBAAC,OAAD,CACEQ,OAAQ,EACRP,MAAO,CACLI,OAAQ,QACRH,MAAO,QACPI,WACE,+GACFH,OAAQ,aAOlB,uBAAGJ,KAAK,YACN,kBAAC,OAAD,CAAMQ,UAAU,cAAcV,QAAM,GAClC,kBAAC,OAAD,CAAMG,IAAK,IACT,kBAAC,OAAD,CACEH,QAAM,EACNI,MAAO,CACLC,MAAO,OACPC,OAAQ,SAGV,kBAAC,YAAD,CACEF,MAAO,CACLG,MAAO,OACPC,OAAQ,QACRC,WACE,+IALN,6BAUA,kBAAC,WAAD,KACE,wcASN,kBAAC,OAAD,CAAMN,IAAK,GACT,kBAAC,OAAD,CACEQ,OAAQ,EACRP,MAAO,CACLI,OAAQ,QACRH,MAAO,QACPI,WACE,+GACFH,OAAQ,WAId,kBAAC,OAAD,CAAMH,IAAK,GACT,kBAAC,OAAD,CACEQ,OAAQ,EACRP,MAAO,CACLI,OAAQ,QACRH,MAAO,QACPI,WACE,+GACFH,OAAQ,aAMlB,uBAAGJ,KAAK,YACN,kBAAC,OAAD,CAAMF,QAAM,GACV,kBAAC,OAAD,CAAMG,IAAK,IACT,kBAAC,OAAD,CACEH,QAAM,EACNI,MAAO,CACLC,MAAO,OACPC,OAAQ,SAGV,kBAAC,YAAD,CACEF,MAAO,CACLG,MAAO,OACPC,OAAQ,QACRC,WACE,8IALN,sBAUA,kBAAC,WAAD,KACE,8BACE,4BACE,+CACA,qIAIA,8DACA,8LAIA,+DACA,0OCjRFG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.04ac8650.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  Layout,\n  Navigation,\n  Header,\n  Drawer,\n  Content,\n  Button,\n  Card,\n  CardMenu,\n  CardTitle,\n  CardText,\n  CardActionProps,\n  CardActions,\n  IconButton,\n  Footer,\n  FooterSection,\n  FooterDropDownSection,\n  FooterDropDownSectionProps,\n  FooterLinkList,\n  Grid,\n  Cell,\n} from \"react-mdl\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Content>\n        <Header class=\"header-color\" title=\"HomeRoom\" scroll>\n          <Navigation>\n            <a href=\"#about\">About</a>\n            <a href=\"#todo\">To Do</a>\n            <a href=\"#classtasks\">Class Tasks</a>\n            <a href=\"#pomodoro\">Pomodoro Timer</a>\n            <a href=\"#features\">Upcoming Features</a>\n            <a href=\"https://github.com/shruthikmusukula/productivity-extension-website\">Website Code</a>\n            <a href=\"https://github.com/mchow101/productivity-extension\"> Extension Code</a>\n          </Navigation>\n        </Header>\n\n        <a name=\"about\">\n          <Grid scroll>\n            <Cell col={12}>\n              <Card\n                scroll\n                style={{\n                  width: \"77em\",\n                  margin: \"auto\",\n                }}\n              >\n                <CardTitle\n                  style={{\n                    color: \"#fff\",\n                    height: \"176px\",\n                    background:\n                      \"url(https://images.unsplash.com/photo-1540350394557-8d14678e7f91?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1189&q=80)\",\n                  }}\n                >\n                  HomeRoom\n                </CardTitle>\n                <CardText>\n                  <span>\n                    During such a tumultuous time for the world, it can be\n                    difficult to manage the seemingly larger workload that we\n                    all face.\n                    <h3>Enter HomeRoom</h3>A simple\n                    productivity extension that can help students and educators of all \n                    ages with developing the simple skill of time\n                    management. Many existing platforms, such as Trello, contain\n                    complex user interfaces. HomeRoom solves this issue by\n                    coming in the form of a Chrome Extension, allowing for ease\n                    of access. All your data can be connected with your Google\n                    account. The extension will be live by Monday, August 17th on\n                    the Chrome Extension store. Scroll below to explore some of HomeRoom's main\n                    features!\n                  </span>\n                </CardText>\n              </Card>\n            </Cell>\n          </Grid>\n        </a>\n        <a name=\"todo\">\n          <Grid className=\"demo-grid-2\" scroll>\n            <Cell col={12}>\n              <Card\n                scroll\n                style={{\n                  width: \"77em\",\n                  margin: \"auto\",\n                }}\n              >\n                <CardTitle\n                  style={{\n                    color: \"#fff\",\n                    height: \"176px\",\n                    background:\n                      \"url(https://images.unsplash.com/photo-1484480974693-6ca0a78fb36b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60)\",\n                  }}\n                >\n                  Feature 1: Personal To-Do List\n              </CardTitle>\n              <CardText>\n                <span>\n                The first feature of the browser extension includes a main homepage which contains a personal to-do list. \n                Users can add entire lists and individual list-items to their task homepage. The homepage also includes lists \n                and items from the following Class List feature.\n                </span>\n              </CardText>\n              </Card>\n            </Cell>\n            <Cell col={4}>\n              <Card\n                shadow={0}\n                style={{\n                  height: \"300px\",\n                  width: \"400px\",\n                  background:\n                    \"url(https://cdn.discordapp.com/attachments/741774580204437589/742552304556834896/unknown.png) center / cover\",\n                  margin: \"auto\",\n                }}\n              ></Card>\n            </Cell>\n            <Cell col={4}>\n              <Card\n                shadow={0}\n                style={{\n                  height: \"300px\",\n                  width: \"400px\",\n                  background:\n                    \"url(https://cdn.discordapp.com/attachments/741774580204437589/742552777976316024/unknown.png) center / cover\",\n                  margin: \"auto\",\n                }}\n              ></Card>\n            </Cell>\n          </Grid>\n        </a>\n\n        <a name=\"classtasks\">\n          <Grid className=\"demo-grid-2\" scroll>\n            <Cell col={12}>\n              <Card\n                scroll\n                style={{\n                  width: \"77em\",\n                  margin: \"auto\",\n                }}\n              >\n                <CardTitle\n                  style={{\n                    color: \"#fff\",\n                    height: \"176px\",\n                    background:\n                      \"url(https://images.unsplash.com/photo-1507925921958-8a62f3d1a50d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60)\",\n                  }}\n                >\n                Feature 2: Shared Class Lists\n              </CardTitle>\n              <CardText>\n                <span>\n                The second feature of the browser extension contains a set of Class Lists along with their respective list items. What makes\n                this feature unique is that users can share entire lists with other users of the extension. Students and educators can\n                also save links to calls for their online classes as well -- all in one place.\n                </span>\n              </CardText>\n              </Card>\n            </Cell>\n            <Cell col={4}>\n              <Card\n                shadow={0}\n                style={{\n                  height: \"300px\",\n                  width: \"400px\",\n                  background:\n                    \"url(https://cdn.discordapp.com/attachments/741774580204437589/742552373167259708/unknown.png) center / cover\",\n                  margin: \"auto\",\n                }}\n              ></Card>\n            </Cell>\n            <Cell col={4}>\n              <Card\n                shadow={0}\n                style={{\n                  height: \"300px\",\n                  width: \"400px\",\n                  background:\n                    \"url(https://cdn.discordapp.com/attachments/741774580204437589/742552866064957460/unknown.png) center / cover\",\n                  margin: \"auto\",\n                }}\n              ></Card>\n            </Cell>\n          </Grid>\n        </a>\n\n        <a name=\"pomodoro\">\n          <Grid className=\"demo-grid-2\" scroll>\n            <Cell col={12}>\n              <Card\n                scroll\n                style={{\n                  width: \"77em\",\n                  margin: \"auto\",\n                }}\n              >\n                <CardTitle\n                  style={{\n                    color: \"#fff\",\n                    height: \"176px\",\n                    background:\n                      \"url(https://images.unsplash.com/photo-1513791053024-3b50799fdd7b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60)\",\n                  }}\n                >\n                  Feature 3: Pomodoro Timer\n                </CardTitle>\n                <CardText>\n                  <span>\n                  For those of us who struggle with time management, whether it be never completing the things we need to do or working too\n                  hard, Francesco Cirillo invented the world-famous Pomodoro technique. HomeRoom gives users access to a personalized Pomodoro\n                  timer. Work times and break periods can be customized. Users can also select the task they would like to work on from a\n                  simple dropdown list under the timer as shown below.\n                  </span>\n                </CardText>\n              </Card>\n            </Cell>\n            <Cell col={4}>\n              <Card\n                shadow={0}\n                style={{\n                  height: \"600px\",\n                  width: \"400px\",\n                  background:\n                    \"url(https://cdn.discordapp.com/attachments/741774580204437589/742552467853803531/unknown.png) center / cover\",\n                  margin: \"auto\",\n                }}\n              ></Card>\n            </Cell>\n            <Cell col={4}>\n              <Card\n                shadow={0}\n                style={{\n                  height: \"600px\",\n                  width: \"400px\",\n                  background:\n                    \"url(https://cdn.discordapp.com/attachments/741774580204437589/742552934403014656/unknown.png) center / cover\",\n                  margin: \"auto\",\n                }}\n              ></Card>\n            </Cell>\n          </Grid>\n        </a>\n        <a name=\"features\">\n          <Grid scroll>\n            <Cell col={12}>\n              <Card\n                scroll\n                style={{\n                  width: \"77em\",\n                  margin: \"auto\",\n                }}\n              >\n                <CardTitle\n                  style={{\n                    color: \"#fff\",\n                    height: \"176px\",\n                    background:\n                      \"url(https://images.unsplash.com/photo-1496449903678-68ddcb189a24?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\",\n                  }}\n                >\n                  Upcoming Features:\n                </CardTitle>\n                <CardText>\n                  <span>\n                    <dl>\n                      <dt>Website Blocker</dt>\n                      <dd>\n                        Users can block certain websites in their browser while trying to focus\n                        to the best of their ability.\n                      </dd>\n                      <dt>Web RTC Video Chat Integration</dt>\n                      <dd>\n                        Users will be able to participate in video calls with other users through our extension\n                        rather than running larger applications (Zoom, Microsoft Teams, etc.).\n                      </dd>\n                      <dt>Global Browser Extension Status</dt>\n                      <dd>\n                        Users will be able to access this extension from the browser of their choice. The\n                        extension will not only be accessible for Chrome users, but for those using Firefox \n                        and other common browsers.\n                      </dd>\n                    </dl>\n                    </span>\n                </CardText>\n              </Card>\n            </Cell>\n          </Grid>\n          </a>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}